name: Deployment Pipeline

on:
  pull_request:
    branches: [main] 
    types: [closed]

jobs:
    integration-worflow:
      if: github.event.pull_request.merged == true
      uses: ishreyasp/task-manager-app/.github/workflows/ci.yml@main    

    deploy-app:
      name: Deploy Production
      needs: integration-worflow
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./frontend

      steps:
        # Step 1: Fetch the repository code with the latest checkout action
        - name: Checkout repository
          uses: actions/checkout@v3
  
        # Step 2: Set up Node.js environment, specify Node.js version 18 and enable npm chaching  
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
            cache: 'npm'
            cache-dependency-path: ./frontend/package-lock.json
  
        # Step 3: Clean install of dependencies from package-lock.json      
        - name: Install dependencies
          run: npm ci
  
        # Step 4: Build the frontend application    
        - name: Build project
          run: npm run build
  
        # Step 5: Install Vercel CLI    
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
  
        # Step 6: Login to Vercel using the token stored in GitHub secrets  
        - name: Pull Vercel environment information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  
        # Step 7: Deploy the frontend application to Vercel  
        - name: Deploy to Vercel
          run: |
            vercel build
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          env:
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
            VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}      